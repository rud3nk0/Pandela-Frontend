{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dmitry\\\\Documents\\\\GitHub\\\\Pandela-Frontend\\\\src\\\\pages\\\\register.tsx\";\nimport React from \"react\";\nimport CardInput from \"../components/CardInput\";\n// https://pandela-youtube.onrender.com/\n// api/profiles/ setup/<str:pk>/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  const onRegister = user => {\n    return fetch(\"https://youtube-new-s0hr.onrender.com/api/auth/signup/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(response => response.json()).then(data => {\n      console.log(\"DATA:\", data);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CardInput, {\n      inputsData: [{\n        title: \"Ваше имя\",\n        type: \"text\",\n        name: \"name\"\n      }, {\n        title: \"Придумайте никнейм\",\n        type: \"text\",\n        name: \"username\"\n      }, {\n        title: \"Почта\",\n        type: \"email\",\n        name: \"email\"\n      }, {\n        title: \"Пароль\",\n        type: \"password\",\n        name: \"password\"\n      }],\n      formTitle: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\",\n      buttonText: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\",\n      to: \"/login\",\n      linkText: \"\\u0423\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B? \\u0412\\u043E\\u0439\\u0442\\u0438\",\n      function: onRegister\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","CardInput","jsxDEV","_jsxDEV","Register","onRegister","user","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","children","inputsData","title","type","name","formTitle","buttonText","to","linkText","function","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dmitry/Documents/GitHub/Pandela-Frontend/src/pages/register.tsx"],"sourcesContent":["import React from \"react\";\r\nimport CardInput from \"../components/CardInput\";\r\n// https://pandela-youtube.onrender.com/\r\n// api/profiles/ setup/<str:pk>/\r\n\r\n\r\ninterface User {\r\n  name: string;\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst Register = () => {\r\n  const onRegister = (user: User) => {\r\n    return fetch(\"https://youtube-new-s0hr.onrender.com/api/auth/signup/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"DATA:\", data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CardInput\r\n        inputsData={[\r\n          { title: \"Ваше имя\", type: \"text\", name: \"name\" },\r\n          { title: \"Придумайте никнейм\", type: \"text\", name: \"username\" },\r\n          { title: \"Почта\", type: \"email\", name: \"email\" },\r\n          { title: \"Пароль\", type: \"password\", name: \"password\" },\r\n        ]}\r\n        formTitle=\"Регистрация\"\r\n        buttonText=\"Зарегистрироваться\"\r\n        to=\"/login\"\r\n        linkText=\"Уже зарегистрированы? Войти\"\r\n        function={onRegister}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAUA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAMC,UAAU,GAAIC,IAAU,IAAK;IACjC,OAAOC,KAAK,CAAC,wDAAwD,EAAE;MACrEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;IAC3B,CAAC,CAAC,CACCO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,IAAI,CAAC;IAC5B,CAAC,CAAC;EACN,CAAC;EAED,oBACEb,OAAA;IAAAgB,QAAA,eACEhB,OAAA,CAACF,SAAS;MACRmB,UAAU,EAAE,CACV;QAAEC,KAAK,EAAE,UAAU;QAAEC,IAAI,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAO,CAAC,EACjD;QAAEF,KAAK,EAAE,oBAAoB;QAAEC,IAAI,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAW,CAAC,EAC/D;QAAEF,KAAK,EAAE,OAAO;QAAEC,IAAI,EAAE,OAAO;QAAEC,IAAI,EAAE;MAAQ,CAAC,EAChD;QAAEF,KAAK,EAAE,QAAQ;QAAEC,IAAI,EAAE,UAAU;QAAEC,IAAI,EAAE;MAAW,CAAC,CACvD;MACFC,SAAS,EAAC,oEAAa;MACvBC,UAAU,EAAC,8GAAoB;MAC/BC,EAAE,EAAC,QAAQ;MACXC,QAAQ,EAAC,qJAA6B;MACtCC,QAAQ,EAAEvB;IAAW;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAhCI7B,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}