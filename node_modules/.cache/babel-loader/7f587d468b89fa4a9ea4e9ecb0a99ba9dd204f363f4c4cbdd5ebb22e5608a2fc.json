{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dmitry\\\\Documents\\\\GitHub\\\\Pandela-Frontend\\\\src\\\\pages\\\\login.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport CardInput from \"../components/CardInput\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function checkUserCredentials(user) {\n  fetch(\"https://aphinapandela.onrender.com/api/users/token/\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(response => response.json()).then(data => {\n    console.log(\"DATA:\", data);\n  });\n}\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const onLogin = data => {\n    checkUserCredentials(data);\n    navigate(\"/\");\n    return \"Hello\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CardInput, {\n      inputsData: [{\n        title: \"Никнейм\",\n        type: \"text\",\n        name: \"username\"\n      }, {\n        title: \"Пароль\",\n        type: \"password\",\n        name: \"password\"\n      }],\n      formTitle: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\",\n      buttonText: \"\\u0412\\u043E\\u0439\\u0442\\u0438\",\n      to: \"/register\",\n      linkText: \"\\u041D\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B? \\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\",\n      function: onLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","CardInput","useNavigate","jsxDEV","_jsxDEV","checkUserCredentials","user","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","Login","_s","navigate","onLogin","children","inputsData","title","type","name","formTitle","buttonText","to","linkText","function","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dmitry/Documents/GitHub/Pandela-Frontend/src/pages/login.tsx"],"sourcesContent":["import React from \"react\";\r\nimport CardInput from \"../components/CardInput\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\ninterface User {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nasync function checkUserCredentials(user: User) {\r\n  fetch(\"https://aphinapandela.onrender.com/api/users/token/\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(user),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      console.log(\"DATA:\", data);\r\n    });\r\n}\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const onLogin = (data: any) => {\r\n    checkUserCredentials(data);\r\n    navigate(\"/\");\r\n    return \"Hello\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CardInput\r\n        inputsData={[\r\n          { title: \"Никнейм\", type: \"text\", name: \"username\" },\r\n          { title: \"Пароль\", type: \"password\", name: \"password\" },\r\n        ]}\r\n        formTitle=\"Авторизация\"\r\n        buttonText=\"Войти\"\r\n        to=\"/register\"\r\n        linkText=\"Не зарегистрированы? Зарегистрироваться\"\r\n        function={onLogin}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ/C,eAAeC,oBAAoBA,CAACC,IAAU,EAAE;EAC9CC,KAAK,CAAC,qDAAqD,EAAE;IAC3DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;EAC3B,CAAC,CAAC,CACCO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;IACdC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,IAAI,CAAC;EAC5B,CAAC,CAAC;AACN;AAEA,MAAMG,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAE9B,MAAMoB,OAAO,GAAIN,IAAS,IAAK;IAC7BX,oBAAoB,CAACW,IAAI,CAAC;IAC1BK,QAAQ,CAAC,GAAG,CAAC;IACb,OAAO,OAAO;EAChB,CAAC;EAED,oBACEjB,OAAA;IAAAmB,QAAA,eACEnB,OAAA,CAACH,SAAS;MACRuB,UAAU,EAAE,CACV;QAAEC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAW,CAAC,EACpD;QAAEF,KAAK,EAAE,QAAQ;QAAEC,IAAI,EAAE,UAAU;QAAEC,IAAI,EAAE;MAAW,CAAC,CACvD;MACFC,SAAS,EAAC,oEAAa;MACvBC,UAAU,EAAC,gCAAO;MAClBC,EAAE,EAAC,WAAW;MACdC,QAAQ,EAAC,6NAAyC;MAClDC,QAAQ,EAAEV;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChB,EAAA,CAxBID,KAAK;EAAA,QACQjB,WAAW;AAAA;AAAAmC,EAAA,GADxBlB,KAAK;AA0BX,eAAeA,KAAK;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}