{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dmitry\\\\Documents\\\\GitHub\\\\Pandela-Frontend\\\\src\\\\pages\\\\main.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { videos } from \"../fake-db/main\";\nimport CardVideo from \"../components/CardVideo\";\nimport styles from \"../styles/pages/Main.module.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCount } from \"../store/availableCountSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [availableCount, setAvailableCount] = useState(0);\n  const dispatch = useDispatch();\n  const availableCountFromRedux = useSelector(state => state.availableCount.value);\n  const handleAvailableCount = () => {\n    const screenWidth = window.innerWidth / 100 * 80;\n    const newCount = screenWidth / 300;\n    setAvailableCount(newCount);\n    dispatch(setCount(newCount));\n  };\n  useEffect(() => {\n    window.addEventListener(\"load\", handleAvailableCount);\n    window.addEventListener(\"resize\", handleAvailableCount);\n    return () => {\n      window.removeEventListener(\"resize\", handleAvailableCount);\n      window.removeEventListener(\"load\", handleAvailableCount);\n    };\n  }, []);\n  const renderVideos = (start, end) => {\n    return videos.slice(start, end).map(video => {\n      if (!video.isAd) {\n        return /*#__PURE__*/_jsxDEV(CardVideo, {\n          ...video\n        }, video.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }, this);\n      } else {\n        return null;\n      }\n    });\n  };\n  const initialVideoCount = availableCount > 2 ? availableCount - 1 : 3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.videos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.title,\n      children: \"\\u041D\\u0435\\u0434\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0432\\u0438\\u0434\\u0435\\u043E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.videos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.videos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"ad-banner\"],\n      children: \"\\u0417\\u0414\\u0415\\u0421\\u042C \\u0411\\u0423\\u0414\\u0415\\u0422 \\u0420\\u0415\\u041A\\u041B\\u0410\\u041C\\u0410\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.videos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"uD7cp8K3VC8e61fTRtPAdtA0y9M=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","videos","CardVideo","styles","useDispatch","useSelector","setCount","jsxDEV","_jsxDEV","Main","_s","availableCount","setAvailableCount","dispatch","availableCountFromRedux","state","value","handleAvailableCount","screenWidth","window","innerWidth","newCount","addEventListener","removeEventListener","renderVideos","start","end","slice","map","video","isAd","id","fileName","_jsxFileName","lineNumber","columnNumber","initialVideoCount","children","className","title","_c","$RefreshReg$"],"sources":["C:/Users/Dmitry/Documents/GitHub/Pandela-Frontend/src/pages/main.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { videos } from \"../fake-db/main\";\r\nimport CardVideo from \"../components/CardVideo\";\r\nimport styles from \"../styles/pages/Main.module.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setCount } from \"../store/availableCountSlice\";\r\n\r\n\r\ninterface RootState {\r\n  availableCount: {\r\n    value: number;\r\n  };\r\n}\r\n\r\nconst Main = () => {\r\n  const [availableCount, setAvailableCount] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const availableCountFromRedux = useSelector(\r\n    (state: RootState) => state.availableCount.value\r\n  );\r\n\r\n  const handleAvailableCount = () => {\r\n    const screenWidth = (window.innerWidth / 100) * 80;\r\n    const newCount = screenWidth / 300;\r\n    setAvailableCount(newCount);\r\n    dispatch(setCount(newCount));\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"load\", handleAvailableCount);\r\n    window.addEventListener(\"resize\", handleAvailableCount);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleAvailableCount);\r\n      window.removeEventListener(\"load\", handleAvailableCount);\r\n    };\r\n  }, []);\r\n\r\n  const renderVideos = (start: number, end: number) => {\r\n    return videos.slice(start, end).map((video: any) => {\r\n      if (!video.isAd) {\r\n        return <CardVideo key={video.id} {...video} />;\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n\r\n  const initialVideoCount = availableCount > 2 ? availableCount - 1 : 3;\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.videos}>\r\n        {/* Popular videos */}\r\n        {/* {renderVideos(0, initialVideoCount)}\r\n        {videos.map(\r\n          (video: any) =>\r\n            video.isAd === true && <CardVideo key={video.id} {...video} />\r\n        )} */}\r\n      </div>\r\n      <h3 className={styles.title}>Недосмотренные видео</h3>\r\n      {/* Last Resently */}\r\n      <div className={styles.videos}>\r\n        {/* {renderVideos(initialVideoCount - 1, initialVideoCount * 2 + 1)} */}\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <div className={styles.videos}>\r\n        {/* {renderVideos(0, initialVideoCount + 2)} */}\r\n      </div>\r\n      <div className={styles[\"ad-banner\"]}>ЗДЕСЬ БУДЕТ РЕКЛАМА</div>\r\n      <div className={styles.videos}>\r\n        {/* {renderVideos(0, videos.length)} */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}