{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dmitry\\\\Documents\\\\GitHub\\\\Pandela-Frontend\\\\src\\\\pages\\\\playlist.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport styles from \"../styles/pages/Playlist.module.scss\";\nimport { playlists, users, videos } from \"../fake-db/main\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Error404 from \"./404\";\nimport CardVideo, { formatNumbers } from \"../components/CardVideo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playlist = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const playlist = playlists.filter(playlist => playlist.playlistId === id);\n  const user = users.filter(user => user.userId === playlist[0].userId)[0];\n  let videosFromPlaylist = [];\n  for (let i = 0; i < playlist[0].videos.length; i++) {\n    videosFromPlaylist.push(videos.filter(video => video.videoId === playlist[0].videos[i])[0]);\n  }\n  let allViews = 0;\n  if (user) {\n    videosFromPlaylist.filter(video => video.userId === user.userId).forEach(video => allViews += video.views);\n  }\n  const handlePlaylistInfoGradient = () => {\n    let image = document.querySelector(`.${styles.playlistThumbnail}`);\n    const playlistInfo = document.querySelector(`.${styles.playlistInfo}`);\n    console.log(playlistInfo, image);\n    if (image && playlistInfo) {\n      // Загружаем изображение с другого домена с указанием \"crossOrigin\"\n      const img = new Image();\n      img.crossOrigin = \"Anonymous\";\n      img.src = image.src;\n\n      // Устанавливаем обработчик события \"onload\" для изображения\n      img.onload = function () {\n        // Получаем цвет пикселя по координатам (x, y)\n        let x = 100;\n        let y = 50;\n        let pixelColor = getPixelColor(img, x, y);\n\n        // Создаем линейный градиент\n        let gradient = `linear-gradient(rgba(${pixelColor.join(\", \")}, 0.7), rgba(0, 0, 0, 0.7))`;\n        playlistInfo.style.background = gradient;\n      };\n    }\n  };\n\n  // Функция для получения цвета пикселя из изображения\n  function getPixelColor(image, x, y) {\n    var canvas = document.createElement(\"canvas\");\n    canvas.width = image.width;\n    canvas.height = image.height;\n    var context = canvas.getContext(\"2d\");\n    if (context) {\n      context.drawImage(image, 0, 0, image.width, image.height);\n      var pixelData = context.getImageData(x, y, 1, 1).data;\n\n      // Возвращаем массив [R, G, B, A]\n      return [pixelData[0], pixelData[1], pixelData[2]];\n    }\n    return [255, 255, 255];\n  }\n  if (playlist[0]) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.playlist,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.playlistInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.playlistThumbnail,\n          src: videosFromPlaylist[0].coverPath,\n          alt: videosFromPlaylist[0].title,\n          onLoad: handlePlaylistInfoGradient\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.playlistTitle,\n          children: playlist[0].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.description,\n          children: playlist[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.playlistAuthor,\n          onClick: () => navigate(`/channel/${playlist[0].userId}/videos`),\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.playlistStats,\n          children: [videosFromPlaylist.length, \" \\u0432\\u0438\\u0434\\u0435\\u043E \", formatNumbers(allViews), \" \\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u043E\\u0432\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.videos,\n        children: videosFromPlaylist.map(video => {\n          return /*#__PURE__*/_jsxDEV(CardVideo, {\n            ...video,\n            option: \"results-page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Error404, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 12\n    }, this);\n  }\n};\n_s(Playlist, \"xqNrWMz2XDR0DYvZC039aFe98pM=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","styles","playlists","users","videos","useNavigate","useParams","Error404","CardVideo","formatNumbers","jsxDEV","_jsxDEV","Playlist","_s","navigate","id","playlist","filter","playlistId","user","userId","videosFromPlaylist","i","length","push","video","videoId","allViews","forEach","views","handlePlaylistInfoGradient","image","document","querySelector","playlistThumbnail","playlistInfo","console","log","img","Image","crossOrigin","src","onload","x","y","pixelColor","getPixelColor","gradient","join","style","background","canvas","createElement","width","height","context","getContext","drawImage","pixelData","getImageData","data","className","children","coverPath","alt","title","onLoad","fileName","_jsxFileName","lineNumber","columnNumber","playlistTitle","description","playlistAuthor","onClick","name","playlistStats","map","option","_c","$RefreshReg$"],"sources":["C:/Users/Dmitry/Documents/GitHub/Pandela-Frontend/src/pages/playlist.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styles from \"../styles/pages/Playlist.module.scss\";\r\nimport { playlists, users, videos } from \"../fake-db/main\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Error404 from \"./404\";\r\nimport CardVideo, { formatNumbers } from \"../components/CardVideo\";\r\n\r\n\r\nconst Playlist = () => {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const playlist = playlists.filter((playlist) => playlist.playlistId === id);\r\n  const user = users.filter((user) => user.userId === playlist[0].userId)[0];\r\n\r\n  let videosFromPlaylist = [];\r\n  for (let i = 0; i < playlist[0].videos.length; i++) {\r\n    videosFromPlaylist.push(\r\n      videos.filter((video) => video.videoId === playlist[0].videos[i])[0]\r\n    );\r\n  }\r\n\r\n  let allViews = 0;\r\n\r\n  if (user) {\r\n    videosFromPlaylist\r\n      .filter((video) => video.userId === user.userId)\r\n      .forEach((video) => (allViews += video.views));\r\n  }\r\n\r\n  const handlePlaylistInfoGradient = () => {\r\n    let image: HTMLImageElement | null = document.querySelector(\r\n      `.${styles.playlistThumbnail}`\r\n    );\r\n\r\n    const playlistInfo: any = document.querySelector(`.${styles.playlistInfo}`);\r\n    console.log(playlistInfo, image);\r\n    if (image && playlistInfo) {\r\n      // Загружаем изображение с другого домена с указанием \"crossOrigin\"\r\n      const img = new Image();\r\n      img.crossOrigin = \"Anonymous\";\r\n      img.src = image.src;\r\n\r\n      // Устанавливаем обработчик события \"onload\" для изображения\r\n      img.onload = function () {\r\n        // Получаем цвет пикселя по координатам (x, y)\r\n        let x = 100;\r\n        let y = 50;\r\n        let pixelColor = getPixelColor(img, x, y);\r\n\r\n        // Создаем линейный градиент\r\n        let gradient = `linear-gradient(rgba(${pixelColor.join(\r\n          \", \"\r\n        )}, 0.7), rgba(0, 0, 0, 0.7))`;\r\n\r\n        playlistInfo.style.background = gradient;\r\n      };\r\n    }\r\n  };\r\n\r\n  // Функция для получения цвета пикселя из изображения\r\n  function getPixelColor(\r\n    image: HTMLImageElement,\r\n    x: number,\r\n    y: number\r\n  ): number[] {\r\n    var canvas = document.createElement(\"canvas\");\r\n    canvas.width = image.width;\r\n    canvas.height = image.height;\r\n    var context: CanvasRenderingContext2D | null = canvas.getContext(\"2d\");\r\n\r\n    if (context) {\r\n      context.drawImage(image, 0, 0, image.width, image.height);\r\n      var pixelData = context.getImageData(x, y, 1, 1).data;\r\n\r\n      // Возвращаем массив [R, G, B, A]\r\n      return [pixelData[0], pixelData[1], pixelData[2]];\r\n    }\r\n\r\n    return [255, 255, 255];\r\n  }\r\n\r\n  if (playlist[0]) {\r\n    return (\r\n      <div className={styles.playlist}>\r\n        <div className={styles.playlistInfo}>\r\n          <img\r\n            className={styles.playlistThumbnail}\r\n            src={videosFromPlaylist[0].coverPath}\r\n            alt={videosFromPlaylist[0].title}\r\n            onLoad={handlePlaylistInfoGradient}\r\n          />\r\n          <h3 className={styles.playlistTitle}>{playlist[0].title}</h3>\r\n          <p className={styles.description}>{playlist[0].description}</p>\r\n          <p className={styles.playlistAuthor} onClick={() => navigate(`/channel/${playlist[0].userId}/videos`)}>{user.name}</p>\r\n          <p className={styles.playlistStats}>\r\n            {videosFromPlaylist.length} видео {formatNumbers(allViews)} просмотров\r\n          </p>\r\n        </div>\r\n        <div className={styles.videos}>\r\n          {videosFromPlaylist.map((video) => {\r\n            return <CardVideo {...video} option=\"results-page\" />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Error404 />;\r\n  }\r\n};\r\n\r\nexport default Playlist;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}