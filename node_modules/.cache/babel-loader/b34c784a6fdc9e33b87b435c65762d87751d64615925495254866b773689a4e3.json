{"ast":null,"code":"import { Options, tokenize as tokenize$1 } from 'linkifyjs';\n\n/**\n * generated from https://raw.githubusercontent.com/w3c/html/26b5126f96f736f796b9e29718138919dd513744/entities.json\n * do not edit\n */\nvar HTML5NamedCharRefs = {\n  // We don't need the complete named character reference because linkifyHtml\n  // does not modify the escape sequences. We do need &nbsp; so that\n  // whitespace is parsed properly. Other types of whitespace should already\n  // be accounted for. &gt; &lt; and &quot; are also frequently relevant ones\n  amp: \"&\",\n  gt: \">\",\n  lt: \"<\",\n  nbsp: \"Â \",\n  quot: \"\\\"\"\n};\nvar HEXCHARCODE = /^#[xX]([A-Fa-f0-9]+)$/;\nvar CHARCODE = /^#([0-9]+)$/;\nvar NAMED = /^([A-Za-z0-9]+)$/;\nvar EntityParser = /** @class */function () {\n  function EntityParser(named) {\n    this.named = named;\n  }\n  EntityParser.prototype.parse = function (entity) {\n    if (!entity) {\n      return;\n    }\n    var matches = entity.match(HEXCHARCODE);\n    if (matches) {\n      return String.fromCharCode(parseInt(matches[1], 16));\n    }\n    matches = entity.match(CHARCODE);\n    if (matches) {\n      return String.fromCharCode(parseInt(matches[1], 10));\n    }\n    matches = entity.match(NAMED);\n    if (matches) {\n      return this.named[matches[1]] || \"&\" + matches[1] + \";\";\n    }\n  };\n  return EntityParser;\n}();\nvar WSP = /[\\t\\n\\f ]/;\nvar ALPHA = /[A-Za-z]/;\nvar CRLF = /\\r\\n?/g;\nfunction isSpace(char) {\n  return WSP.test(char);\n}\nfunction isAlpha(char) {\n  return ALPHA.test(char);\n}\nfunction preprocessInput(input) {\n  return input.replace(CRLF, '\\n');\n}\nvar EventedTokenizer = /** @class */function () {\n  function EventedTokenizer(delegate, entityParser, mode) {\n    if (mode === void 0) {\n      mode = 'precompile';\n    }\n    this.delegate = delegate;\n    this.entityParser = entityParser;\n    this.mode = mode;\n    this.state = \"beforeData\" /* beforeData */;\n    this.line = -1;\n    this.column = -1;\n    this.input = '';\n    this.index = -1;\n    this.tagNameBuffer = '';\n    this.states = {\n      beforeData: function () {\n        var char = this.peek();\n        if (char === '<' && !this.isIgnoredEndTag()) {\n          this.transitionTo(\"tagOpen\" /* tagOpen */);\n          this.markTagStart();\n          this.consume();\n        } else {\n          if (this.mode === 'precompile' && char === '\\n') {\n            var tag = this.tagNameBuffer.toLowerCase();\n            if (tag === 'pre' || tag === 'textarea') {\n              this.consume();\n            }\n          }\n          this.transitionTo(\"data\" /* data */);\n          this.delegate.beginData();\n        }\n      },\n      data: function () {\n        var char = this.peek();\n        var tag = this.tagNameBuffer;\n        if (char === '<' && !this.isIgnoredEndTag()) {\n          this.delegate.finishData();\n          this.transitionTo(\"tagOpen\" /* tagOpen */);\n          this.markTagStart();\n          this.consume();\n        } else if (char === '&' && tag !== 'script' && tag !== 'style') {\n          this.consume();\n          this.delegate.appendToData(this.consumeCharRef() || '&');\n        } else {\n          this.consume();\n          this.delegate.appendToData(char);\n        }\n      },\n      tagOpen: function () {\n        var char = this.consume();\n        if (char === '!') {\n          this.transitionTo(\"markupDeclarationOpen\" /* markupDeclarationOpen */);\n        } else if (char === '/') {\n          this.transitionTo(\"endTagOpen\" /* endTagOpen */);\n        } else if (char === '@' || char === ':' || isAlpha(char)) {\n          this.transitionTo(\"tagName\" /* tagName */);\n          this.tagNameBuffer = '';\n          this.delegate.beginStartTag();\n          this.appendToTagName(char);\n        }\n      },\n      markupDeclarationOpen: function () {\n        var char = this.consume();\n        if (char === '-' && this.peek() === '-') {\n          this.consume();\n          this.transitionTo(\"commentStart\" /* commentStart */);\n          this.delegate.beginComment();\n        } else {\n          var maybeDoctype = char.toUpperCase() + this.input.substring(this.index, this.index + 6).toUpperCase();\n          if (maybeDoctype === 'DOCTYPE') {\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.transitionTo(\"doctype\" /* doctype */);\n            if (this.delegate.beginDoctype) this.delegate.beginDoctype();\n          }\n        }\n      },\n      doctype: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeDoctypeName\" /* beforeDoctypeName */);\n        }\n      },\n      beforeDoctypeName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          return;\n        } else {\n          this.transitionTo(\"doctypeName\" /* doctypeName */);\n          if (this.delegate.appendToDoctypeName) this.delegate.appendToDoctypeName(char.toLowerCase());\n        }\n      },\n      doctypeName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"afterDoctypeName\" /* afterDoctypeName */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypeName) this.delegate.appendToDoctypeName(char.toLowerCase());\n        }\n      },\n      afterDoctypeName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          return;\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          var nextSixChars = char.toUpperCase() + this.input.substring(this.index, this.index + 5).toUpperCase();\n          var isPublic = nextSixChars.toUpperCase() === 'PUBLIC';\n          var isSystem = nextSixChars.toUpperCase() === 'SYSTEM';\n          if (isPublic || isSystem) {\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n          }\n          if (isPublic) {\n            this.transitionTo(\"afterDoctypePublicKeyword\" /* afterDoctypePublicKeyword */);\n          } else if (isSystem) {\n            this.transitionTo(\"afterDoctypeSystemKeyword\" /* afterDoctypeSystemKeyword */);\n          }\n        }\n      },\n      afterDoctypePublicKeyword: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeDoctypePublicIdentifier\" /* beforeDoctypePublicIdentifier */);\n          this.consume();\n        } else if (char === '\"') {\n          this.transitionTo(\"doctypePublicIdentifierDoubleQuoted\" /* doctypePublicIdentifierDoubleQuoted */);\n          this.consume();\n        } else if (char === \"'\") {\n          this.transitionTo(\"doctypePublicIdentifierSingleQuoted\" /* doctypePublicIdentifierSingleQuoted */);\n          this.consume();\n        } else if (char === '>') {\n          this.consume();\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        }\n      },\n      doctypePublicIdentifierDoubleQuoted: function () {\n        var char = this.consume();\n        if (char === '\"') {\n          this.transitionTo(\"afterDoctypePublicIdentifier\" /* afterDoctypePublicIdentifier */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypePublicIdentifier) this.delegate.appendToDoctypePublicIdentifier(char);\n        }\n      },\n      doctypePublicIdentifierSingleQuoted: function () {\n        var char = this.consume();\n        if (char === \"'\") {\n          this.transitionTo(\"afterDoctypePublicIdentifier\" /* afterDoctypePublicIdentifier */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypePublicIdentifier) this.delegate.appendToDoctypePublicIdentifier(char);\n        }\n      },\n      afterDoctypePublicIdentifier: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"betweenDoctypePublicAndSystemIdentifiers\" /* betweenDoctypePublicAndSystemIdentifiers */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else if (char === '\"') {\n          this.transitionTo(\"doctypeSystemIdentifierDoubleQuoted\" /* doctypeSystemIdentifierDoubleQuoted */);\n        } else if (char === \"'\") {\n          this.transitionTo(\"doctypeSystemIdentifierSingleQuoted\" /* doctypeSystemIdentifierSingleQuoted */);\n        }\n      },\n      betweenDoctypePublicAndSystemIdentifiers: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          return;\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else if (char === '\"') {\n          this.transitionTo(\"doctypeSystemIdentifierDoubleQuoted\" /* doctypeSystemIdentifierDoubleQuoted */);\n        } else if (char === \"'\") {\n          this.transitionTo(\"doctypeSystemIdentifierSingleQuoted\" /* doctypeSystemIdentifierSingleQuoted */);\n        }\n      },\n      doctypeSystemIdentifierDoubleQuoted: function () {\n        var char = this.consume();\n        if (char === '\"') {\n          this.transitionTo(\"afterDoctypeSystemIdentifier\" /* afterDoctypeSystemIdentifier */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypeSystemIdentifier) this.delegate.appendToDoctypeSystemIdentifier(char);\n        }\n      },\n      doctypeSystemIdentifierSingleQuoted: function () {\n        var char = this.consume();\n        if (char === \"'\") {\n          this.transitionTo(\"afterDoctypeSystemIdentifier\" /* afterDoctypeSystemIdentifier */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypeSystemIdentifier) this.delegate.appendToDoctypeSystemIdentifier(char);\n        }\n      },\n      afterDoctypeSystemIdentifier: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          return;\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        }\n      },\n      commentStart: function () {\n        var char = this.consume();\n        if (char === '-') {\n          this.transitionTo(\"commentStartDash\" /* commentStartDash */);\n        } else if (char === '>') {\n          this.delegate.finishComment();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.delegate.appendToCommentData(char);\n          this.transitionTo(\"comment\" /* comment */);\n        }\n      },\n      commentStartDash: function () {\n        var char = this.consume();\n        if (char === '-') {\n          this.transitionTo(\"commentEnd\" /* commentEnd */);\n        } else if (char === '>') {\n          this.delegate.finishComment();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.delegate.appendToCommentData('-');\n          this.transitionTo(\"comment\" /* comment */);\n        }\n      },\n      comment: function () {\n        var char = this.consume();\n        if (char === '-') {\n          this.transitionTo(\"commentEndDash\" /* commentEndDash */);\n        } else {\n          this.delegate.appendToCommentData(char);\n        }\n      },\n      commentEndDash: function () {\n        var char = this.consume();\n        if (char === '-') {\n          this.transitionTo(\"commentEnd\" /* commentEnd */);\n        } else {\n          this.delegate.appendToCommentData('-' + char);\n          this.transitionTo(\"comment\" /* comment */);\n        }\n      },\n      commentEnd: function () {\n        var char = this.consume();\n        if (char === '>') {\n          this.delegate.finishComment();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.delegate.appendToCommentData('--' + char);\n          this.transitionTo(\"comment\" /* comment */);\n        }\n      },\n      tagName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        } else if (char === '/') {\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '>') {\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.appendToTagName(char);\n        }\n      },\n      endTagName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n          this.tagNameBuffer = '';\n        } else if (char === '/') {\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n          this.tagNameBuffer = '';\n        } else if (char === '>') {\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n          this.tagNameBuffer = '';\n        } else {\n          this.appendToTagName(char);\n        }\n      },\n      beforeAttributeName: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.consume();\n          return;\n        } else if (char === '/') {\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n          this.consume();\n        } else if (char === '>') {\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else if (char === '=') {\n          this.delegate.reportSyntaxError('attribute name cannot start with equals sign');\n          this.transitionTo(\"attributeName\" /* attributeName */);\n          this.delegate.beginAttribute();\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        } else {\n          this.transitionTo(\"attributeName\" /* attributeName */);\n          this.delegate.beginAttribute();\n        }\n      },\n      attributeName: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.transitionTo(\"afterAttributeName\" /* afterAttributeName */);\n          this.consume();\n        } else if (char === '/') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '=') {\n          this.transitionTo(\"beforeAttributeValue\" /* beforeAttributeValue */);\n          this.consume();\n        } else if (char === '>') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else if (char === '\"' || char === \"'\" || char === '<') {\n          this.delegate.reportSyntaxError(char + ' is not a valid character within attribute names');\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        } else {\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        }\n      },\n      afterAttributeName: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.consume();\n          return;\n        } else if (char === '/') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '=') {\n          this.consume();\n          this.transitionTo(\"beforeAttributeValue\" /* beforeAttributeValue */);\n        } else if (char === '>') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.transitionTo(\"attributeName\" /* attributeName */);\n          this.delegate.beginAttribute();\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        }\n      },\n      beforeAttributeValue: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.consume();\n        } else if (char === '\"') {\n          this.transitionTo(\"attributeValueDoubleQuoted\" /* attributeValueDoubleQuoted */);\n          this.delegate.beginAttributeValue(true);\n          this.consume();\n        } else if (char === \"'\") {\n          this.transitionTo(\"attributeValueSingleQuoted\" /* attributeValueSingleQuoted */);\n          this.delegate.beginAttributeValue(true);\n          this.consume();\n        } else if (char === '>') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.transitionTo(\"attributeValueUnquoted\" /* attributeValueUnquoted */);\n          this.delegate.beginAttributeValue(false);\n          this.consume();\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      attributeValueDoubleQuoted: function () {\n        var char = this.consume();\n        if (char === '\"') {\n          this.delegate.finishAttributeValue();\n          this.transitionTo(\"afterAttributeValueQuoted\" /* afterAttributeValueQuoted */);\n        } else if (char === '&') {\n          this.delegate.appendToAttributeValue(this.consumeCharRef() || '&');\n        } else {\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      attributeValueSingleQuoted: function () {\n        var char = this.consume();\n        if (char === \"'\") {\n          this.delegate.finishAttributeValue();\n          this.transitionTo(\"afterAttributeValueQuoted\" /* afterAttributeValueQuoted */);\n        } else if (char === '&') {\n          this.delegate.appendToAttributeValue(this.consumeCharRef() || '&');\n        } else {\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      attributeValueUnquoted: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        } else if (char === '/') {\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '&') {\n          this.consume();\n          this.delegate.appendToAttributeValue(this.consumeCharRef() || '&');\n        } else if (char === '>') {\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.consume();\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      afterAttributeValueQuoted: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.consume();\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        } else if (char === '/') {\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '>') {\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        }\n      },\n      selfClosingStartTag: function () {\n        var char = this.peek();\n        if (char === '>') {\n          this.consume();\n          this.delegate.markTagAsSelfClosing();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        }\n      },\n      endTagOpen: function () {\n        var char = this.consume();\n        if (char === '@' || char === ':' || isAlpha(char)) {\n          this.transitionTo(\"endTagName\" /* endTagName */);\n          this.tagNameBuffer = '';\n          this.delegate.beginEndTag();\n          this.appendToTagName(char);\n        }\n      }\n    };\n    this.reset();\n  }\n  EventedTokenizer.prototype.reset = function () {\n    this.transitionTo(\"beforeData\" /* beforeData */);\n    this.input = '';\n    this.tagNameBuffer = '';\n    this.index = 0;\n    this.line = 1;\n    this.column = 0;\n    this.delegate.reset();\n  };\n  EventedTokenizer.prototype.transitionTo = function (state) {\n    this.state = state;\n  };\n  EventedTokenizer.prototype.tokenize = function (input) {\n    this.reset();\n    this.tokenizePart(input);\n    this.tokenizeEOF();\n  };\n  EventedTokenizer.prototype.tokenizePart = function (input) {\n    this.input += preprocessInput(input);\n    while (this.index < this.input.length) {\n      var handler = this.states[this.state];\n      if (handler !== undefined) {\n        handler.call(this);\n      } else {\n        throw new Error(\"unhandled state \" + this.state);\n      }\n    }\n  };\n  EventedTokenizer.prototype.tokenizeEOF = function () {\n    this.flushData();\n  };\n  EventedTokenizer.prototype.flushData = function () {\n    if (this.state === 'data') {\n      this.delegate.finishData();\n      this.transitionTo(\"beforeData\" /* beforeData */);\n    }\n  };\n  EventedTokenizer.prototype.peek = function () {\n    return this.input.charAt(this.index);\n  };\n  EventedTokenizer.prototype.consume = function () {\n    var char = this.peek();\n    this.index++;\n    if (char === '\\n') {\n      this.line++;\n      this.column = 0;\n    } else {\n      this.column++;\n    }\n    return char;\n  };\n  EventedTokenizer.prototype.consumeCharRef = function () {\n    var endIndex = this.input.indexOf(';', this.index);\n    if (endIndex === -1) {\n      return;\n    }\n    var entity = this.input.slice(this.index, endIndex);\n    var chars = this.entityParser.parse(entity);\n    if (chars) {\n      var count = entity.length;\n      // consume the entity chars\n      while (count) {\n        this.consume();\n        count--;\n      }\n      // consume the `;`\n      this.consume();\n      return chars;\n    }\n  };\n  EventedTokenizer.prototype.markTagStart = function () {\n    this.delegate.tagOpen();\n  };\n  EventedTokenizer.prototype.appendToTagName = function (char) {\n    this.tagNameBuffer += char;\n    this.delegate.appendToTagName(char);\n  };\n  EventedTokenizer.prototype.isIgnoredEndTag = function () {\n    var tag = this.tagNameBuffer;\n    return tag === 'title' && this.input.substring(this.index, this.index + 8) !== '</title>' || tag === 'style' && this.input.substring(this.index, this.index + 8) !== '</style>' || tag === 'script' && this.input.substring(this.index, this.index + 9) !== '</script>';\n  };\n  return EventedTokenizer;\n}();\nvar Tokenizer = /** @class */function () {\n  function Tokenizer(entityParser, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.options = options;\n    this.token = null;\n    this.startLine = 1;\n    this.startColumn = 0;\n    this.tokens = [];\n    this.tokenizer = new EventedTokenizer(this, entityParser, options.mode);\n    this._currentAttribute = undefined;\n  }\n  Tokenizer.prototype.tokenize = function (input) {\n    this.tokens = [];\n    this.tokenizer.tokenize(input);\n    return this.tokens;\n  };\n  Tokenizer.prototype.tokenizePart = function (input) {\n    this.tokens = [];\n    this.tokenizer.tokenizePart(input);\n    return this.tokens;\n  };\n  Tokenizer.prototype.tokenizeEOF = function () {\n    this.tokens = [];\n    this.tokenizer.tokenizeEOF();\n    return this.tokens[0];\n  };\n  Tokenizer.prototype.reset = function () {\n    this.token = null;\n    this.startLine = 1;\n    this.startColumn = 0;\n  };\n  Tokenizer.prototype.current = function () {\n    var token = this.token;\n    if (token === null) {\n      throw new Error('token was unexpectedly null');\n    }\n    if (arguments.length === 0) {\n      return token;\n    }\n    for (var i = 0; i < arguments.length; i++) {\n      if (token.type === arguments[i]) {\n        return token;\n      }\n    }\n    throw new Error(\"token type was unexpectedly \" + token.type);\n  };\n  Tokenizer.prototype.push = function (token) {\n    this.token = token;\n    this.tokens.push(token);\n  };\n  Tokenizer.prototype.currentAttribute = function () {\n    return this._currentAttribute;\n  };\n  Tokenizer.prototype.addLocInfo = function () {\n    if (this.options.loc) {\n      this.current().loc = {\n        start: {\n          line: this.startLine,\n          column: this.startColumn\n        },\n        end: {\n          line: this.tokenizer.line,\n          column: this.tokenizer.column\n        }\n      };\n    }\n    this.startLine = this.tokenizer.line;\n    this.startColumn = this.tokenizer.column;\n  };\n  // Data\n  Tokenizer.prototype.beginDoctype = function () {\n    this.push({\n      type: \"Doctype\" /* Doctype */,\n      name: ''\n    });\n  };\n  Tokenizer.prototype.appendToDoctypeName = function (char) {\n    this.current(\"Doctype\" /* Doctype */).name += char;\n  };\n  Tokenizer.prototype.appendToDoctypePublicIdentifier = function (char) {\n    var doctype = this.current(\"Doctype\" /* Doctype */);\n    if (doctype.publicIdentifier === undefined) {\n      doctype.publicIdentifier = char;\n    } else {\n      doctype.publicIdentifier += char;\n    }\n  };\n  Tokenizer.prototype.appendToDoctypeSystemIdentifier = function (char) {\n    var doctype = this.current(\"Doctype\" /* Doctype */);\n    if (doctype.systemIdentifier === undefined) {\n      doctype.systemIdentifier = char;\n    } else {\n      doctype.systemIdentifier += char;\n    }\n  };\n  Tokenizer.prototype.endDoctype = function () {\n    this.addLocInfo();\n  };\n  Tokenizer.prototype.beginData = function () {\n    this.push({\n      type: \"Chars\" /* Chars */,\n      chars: ''\n    });\n  };\n  Tokenizer.prototype.appendToData = function (char) {\n    this.current(\"Chars\" /* Chars */).chars += char;\n  };\n  Tokenizer.prototype.finishData = function () {\n    this.addLocInfo();\n  };\n  // Comment\n  Tokenizer.prototype.beginComment = function () {\n    this.push({\n      type: \"Comment\" /* Comment */,\n      chars: ''\n    });\n  };\n  Tokenizer.prototype.appendToCommentData = function (char) {\n    this.current(\"Comment\" /* Comment */).chars += char;\n  };\n  Tokenizer.prototype.finishComment = function () {\n    this.addLocInfo();\n  };\n  // Tags - basic\n  Tokenizer.prototype.tagOpen = function () {};\n  Tokenizer.prototype.beginStartTag = function () {\n    this.push({\n      type: \"StartTag\" /* StartTag */,\n      tagName: '',\n      attributes: [],\n      selfClosing: false\n    });\n  };\n  Tokenizer.prototype.beginEndTag = function () {\n    this.push({\n      type: \"EndTag\" /* EndTag */,\n      tagName: ''\n    });\n  };\n  Tokenizer.prototype.finishTag = function () {\n    this.addLocInfo();\n  };\n  Tokenizer.prototype.markTagAsSelfClosing = function () {\n    this.current(\"StartTag\" /* StartTag */).selfClosing = true;\n  };\n  // Tags - name\n  Tokenizer.prototype.appendToTagName = function (char) {\n    this.current(\"StartTag\" /* StartTag */, \"EndTag\" /* EndTag */).tagName += char;\n  };\n  // Tags - attributes\n  Tokenizer.prototype.beginAttribute = function () {\n    this._currentAttribute = ['', '', false];\n  };\n  Tokenizer.prototype.appendToAttributeName = function (char) {\n    this.currentAttribute()[0] += char;\n  };\n  Tokenizer.prototype.beginAttributeValue = function (isQuoted) {\n    this.currentAttribute()[2] = isQuoted;\n  };\n  Tokenizer.prototype.appendToAttributeValue = function (char) {\n    this.currentAttribute()[1] += char;\n  };\n  Tokenizer.prototype.finishAttributeValue = function () {\n    this.current(\"StartTag\" /* StartTag */).attributes.push(this._currentAttribute);\n  };\n  Tokenizer.prototype.reportSyntaxError = function (message) {\n    this.current().syntaxError = message;\n  };\n  return Tokenizer;\n}();\nfunction tokenize(input, options) {\n  var tokenizer = new Tokenizer(new EntityParser(HTML5NamedCharRefs), options);\n  return tokenizer.tokenize(input);\n}\nconst LinkifyResult = 'LinkifyResult';\nconst StartTag = 'StartTag';\nconst EndTag = 'EndTag';\nconst Chars = 'Chars';\nconst Comment = 'Comment';\nconst Doctype = 'Doctype';\n\n/**\n * @param {string} str html string to link\n * @param {import('linkifyjs').Opts} [opts] linkify options\n * @returns {string} resulting string\n */\nfunction linkifyHtml(str, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  // `tokens` and `token` in this section refer to tokens generated by the\n  // HTML parser, not linkify's parser\n  const tokens = tokenize(str);\n  const linkifiedTokens = [];\n  const linkified = [];\n  const options = new Options(opts, defaultRender);\n\n  // Linkify the tokens given by the parser\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.type === StartTag) {\n      linkifiedTokens.push(token);\n\n      // Ignore all the contents of ignored tags\n      const tagName = token.tagName.toUpperCase();\n      const isIgnored = tagName === 'A' || options.ignoreTags.indexOf(tagName) >= 0;\n      if (!isIgnored) {\n        continue;\n      }\n      let preskipLen = linkifiedTokens.length;\n      skipTagTokens(tagName, tokens, ++i, linkifiedTokens);\n      i += linkifiedTokens.length - preskipLen - 1;\n    } else if (token.type !== Chars) {\n      // Skip this token, it's not important\n      linkifiedTokens.push(token);\n    } else {\n      // Valid text token, linkify it!\n      const linkifedChars = linkifyChars(token.chars, options);\n      linkifiedTokens.push.apply(linkifiedTokens, linkifedChars);\n    }\n  }\n\n  // Convert the tokens back into a string\n  for (let i = 0; i < linkifiedTokens.length; i++) {\n    const token = linkifiedTokens[i];\n    switch (token.type) {\n      case LinkifyResult:\n        linkified.push(token.rendered);\n        break;\n      case StartTag:\n        {\n          let link = '<' + token.tagName;\n          if (token.attributes.length > 0) {\n            link += ' ' + attributeArrayToStrings(token.attributes).join(' ');\n          }\n          if (token.selfClosing) {\n            link += ' /';\n          }\n          link += '>';\n          linkified.push(link);\n          break;\n        }\n      case EndTag:\n        linkified.push(`</${token.tagName}>`);\n        break;\n      case Chars:\n        linkified.push(escapeText(token.chars));\n        break;\n      case Comment:\n        linkified.push(`<!--${escapeText(token.chars)}-->`);\n        break;\n      case Doctype:\n        {\n          let doctype = `<!DOCTYPE ${token.name}`;\n          if (token.publicIdentifier) {\n            doctype += ` PUBLIC \"${token.publicIdentifier}\"`;\n          }\n          if (token.systemIdentifier) {\n            doctype += ` \"${token.systemIdentifier}\"`;\n          }\n          doctype += '>';\n          linkified.push(doctype);\n          break;\n        }\n    }\n  }\n  return linkified.join('');\n}\n\n/**\n\t`tokens` and `token` in this section referes to tokens returned by\n\t`linkify.tokenize`. `linkified` will contain HTML Parser-style tokens\n\t@param {string}\n\t@param {import('linkifyjs').Options}\n*/\nfunction linkifyChars(str, options) {\n  const tokens = tokenize$1(str);\n  const result = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.t === 'nl' && options.get('nl2br')) {\n      result.push({\n        type: StartTag,\n        tagName: 'br',\n        attributes: [],\n        selfClosing: true\n      });\n    } else if (!token.isLink || !options.check(token)) {\n      result.push({\n        type: Chars,\n        chars: token.toString()\n      });\n    } else {\n      result.push({\n        type: LinkifyResult,\n        rendered: options.render(token)\n      });\n    }\n  }\n  return result;\n}\n\n/**\n\tReturns a list of tokens skipped until the closing tag of tagName.\n\n\t* `tagName` is the closing tag which will prompt us to stop skipping\n\t* `tokens` is the array of tokens generated by HTML5Tokenizer which\n\t* `i` is the index immediately after the opening tag to skip\n\t* `skippedTokens` is an array which skipped tokens are being pushed into\n\n\tCaveats\n\n\t* Assumes that i is the first token after the given opening tagName\n\t* The closing tag will be skipped, but nothing after it\n\t* Will track whether there is a nested tag of the same type\n*/\nfunction skipTagTokens(tagName, tokens, i, skippedTokens) {\n  // number of tokens of this type on the [fictional] stack\n  let stackCount = 1;\n  while (i < tokens.length && stackCount > 0) {\n    let token = tokens[i];\n    if (token.type === StartTag && token.tagName.toUpperCase() === tagName) {\n      // Nested tag of the same type, \"add to stack\"\n      stackCount++;\n    } else if (token.type === EndTag && token.tagName.toUpperCase() === tagName) {\n      // Closing tag\n      stackCount--;\n    }\n    skippedTokens.push(token);\n    i++;\n  }\n\n  // Note that if stackCount > 0 here, the HTML is probably invalid\n  return skippedTokens;\n}\nfunction defaultRender(_ref) {\n  let {\n    tagName,\n    attributes,\n    content\n  } = _ref;\n  return `<${tagName} ${attributesToString(attributes)}>${escapeText(content)}</${tagName}>`;\n}\nfunction escapeText(text) {\n  return text.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\nfunction escapeAttr(attr) {\n  return attr.replace(/\"/g, '&quot;');\n}\nfunction attributesToString(attributes) {\n  const result = [];\n  for (const attr in attributes) {\n    const val = attributes[attr] + '';\n    result.push(`${attr}=\"${escapeAttr(val)}\"`);\n  }\n  return result.join(' ');\n}\nfunction attributeArrayToStrings(attrs) {\n  const attrStrs = [];\n  for (let i = 0; i < attrs.length; i++) {\n    const name = attrs[i][0];\n    const value = attrs[i][1] + '';\n    attrStrs.push(`${name}=\"${escapeAttr(value)}\"`);\n  }\n  return attrStrs;\n}\nexport { linkifyHtml as default };","map":{"version":3,"names":["Options","tokenize","tokenize$1","HTML5NamedCharRefs","amp","gt","lt","nbsp","quot","HEXCHARCODE","CHARCODE","NAMED","EntityParser","named","prototype","parse","entity","matches","match","String","fromCharCode","parseInt","WSP","ALPHA","CRLF","isSpace","char","test","isAlpha","preprocessInput","input","replace","EventedTokenizer","delegate","entityParser","mode","state","line","column","index","tagNameBuffer","states","beforeData","peek","isIgnoredEndTag","transitionTo","markTagStart","consume","tag","toLowerCase","beginData","data","finishData","appendToData","consumeCharRef","tagOpen","beginStartTag","appendToTagName","markupDeclarationOpen","beginComment","maybeDoctype","toUpperCase","substring","beginDoctype","doctype","beforeDoctypeName","appendToDoctypeName","doctypeName","endDoctype","afterDoctypeName","nextSixChars","isPublic","isSystem","afterDoctypePublicKeyword","doctypePublicIdentifierDoubleQuoted","appendToDoctypePublicIdentifier","doctypePublicIdentifierSingleQuoted","afterDoctypePublicIdentifier","betweenDoctypePublicAndSystemIdentifiers","doctypeSystemIdentifierDoubleQuoted","appendToDoctypeSystemIdentifier","doctypeSystemIdentifierSingleQuoted","afterDoctypeSystemIdentifier","commentStart","finishComment","appendToCommentData","commentStartDash","comment","commentEndDash","commentEnd","tagName","finishTag","endTagName","beforeAttributeName","reportSyntaxError","beginAttribute","appendToAttributeName","attributeName","beginAttributeValue","finishAttributeValue","afterAttributeName","beforeAttributeValue","appendToAttributeValue","attributeValueDoubleQuoted","attributeValueSingleQuoted","attributeValueUnquoted","afterAttributeValueQuoted","selfClosingStartTag","markTagAsSelfClosing","endTagOpen","beginEndTag","reset","tokenizePart","tokenizeEOF","length","handler","undefined","call","Error","flushData","charAt","endIndex","indexOf","slice","chars","count","Tokenizer","options","token","startLine","startColumn","tokens","tokenizer","_currentAttribute","current","arguments","i","type","push","currentAttribute","addLocInfo","loc","start","end","name","publicIdentifier","systemIdentifier","attributes","selfClosing","isQuoted","message","syntaxError","LinkifyResult","StartTag","EndTag","Chars","Comment","Doctype","linkifyHtml","str","opts","linkifiedTokens","linkified","defaultRender","isIgnored","ignoreTags","preskipLen","skipTagTokens","linkifedChars","linkifyChars","apply","rendered","link","attributeArrayToStrings","join","escapeText","result","t","get","isLink","check","toString","render","skippedTokens","stackCount","_ref","content","attributesToString","text","escapeAttr","attr","val","attrs","attrStrs","value","default"],"sources":["C:/Users/Dmitry/Documents/GitHub/Pandela-Frontend/node_modules/linkify-html/dist/linkify-html.es.js"],"sourcesContent":["import { Options, tokenize as tokenize$1 } from 'linkifyjs';\n\n/**\n * generated from https://raw.githubusercontent.com/w3c/html/26b5126f96f736f796b9e29718138919dd513744/entities.json\n * do not edit\n */\nvar HTML5NamedCharRefs = {\n  // We don't need the complete named character reference because linkifyHtml\n  // does not modify the escape sequences. We do need &nbsp; so that\n  // whitespace is parsed properly. Other types of whitespace should already\n  // be accounted for. &gt; &lt; and &quot; are also frequently relevant ones\n  amp: \"&\",\n  gt: \">\",\n  lt: \"<\",\n  nbsp: \"Â \",\n  quot: \"\\\"\"\n};\nvar HEXCHARCODE = /^#[xX]([A-Fa-f0-9]+)$/;\nvar CHARCODE = /^#([0-9]+)$/;\nvar NAMED = /^([A-Za-z0-9]+)$/;\nvar EntityParser = /** @class */function () {\n  function EntityParser(named) {\n    this.named = named;\n  }\n  EntityParser.prototype.parse = function (entity) {\n    if (!entity) {\n      return;\n    }\n    var matches = entity.match(HEXCHARCODE);\n    if (matches) {\n      return String.fromCharCode(parseInt(matches[1], 16));\n    }\n    matches = entity.match(CHARCODE);\n    if (matches) {\n      return String.fromCharCode(parseInt(matches[1], 10));\n    }\n    matches = entity.match(NAMED);\n    if (matches) {\n      return this.named[matches[1]] || \"&\" + matches[1] + \";\";\n    }\n  };\n  return EntityParser;\n}();\nvar WSP = /[\\t\\n\\f ]/;\nvar ALPHA = /[A-Za-z]/;\nvar CRLF = /\\r\\n?/g;\nfunction isSpace(char) {\n  return WSP.test(char);\n}\nfunction isAlpha(char) {\n  return ALPHA.test(char);\n}\nfunction preprocessInput(input) {\n  return input.replace(CRLF, '\\n');\n}\nvar EventedTokenizer = /** @class */function () {\n  function EventedTokenizer(delegate, entityParser, mode) {\n    if (mode === void 0) {\n      mode = 'precompile';\n    }\n    this.delegate = delegate;\n    this.entityParser = entityParser;\n    this.mode = mode;\n    this.state = \"beforeData\" /* beforeData */;\n    this.line = -1;\n    this.column = -1;\n    this.input = '';\n    this.index = -1;\n    this.tagNameBuffer = '';\n    this.states = {\n      beforeData: function () {\n        var char = this.peek();\n        if (char === '<' && !this.isIgnoredEndTag()) {\n          this.transitionTo(\"tagOpen\" /* tagOpen */);\n          this.markTagStart();\n          this.consume();\n        } else {\n          if (this.mode === 'precompile' && char === '\\n') {\n            var tag = this.tagNameBuffer.toLowerCase();\n            if (tag === 'pre' || tag === 'textarea') {\n              this.consume();\n            }\n          }\n          this.transitionTo(\"data\" /* data */);\n          this.delegate.beginData();\n        }\n      },\n      data: function () {\n        var char = this.peek();\n        var tag = this.tagNameBuffer;\n        if (char === '<' && !this.isIgnoredEndTag()) {\n          this.delegate.finishData();\n          this.transitionTo(\"tagOpen\" /* tagOpen */);\n          this.markTagStart();\n          this.consume();\n        } else if (char === '&' && tag !== 'script' && tag !== 'style') {\n          this.consume();\n          this.delegate.appendToData(this.consumeCharRef() || '&');\n        } else {\n          this.consume();\n          this.delegate.appendToData(char);\n        }\n      },\n      tagOpen: function () {\n        var char = this.consume();\n        if (char === '!') {\n          this.transitionTo(\"markupDeclarationOpen\" /* markupDeclarationOpen */);\n        } else if (char === '/') {\n          this.transitionTo(\"endTagOpen\" /* endTagOpen */);\n        } else if (char === '@' || char === ':' || isAlpha(char)) {\n          this.transitionTo(\"tagName\" /* tagName */);\n          this.tagNameBuffer = '';\n          this.delegate.beginStartTag();\n          this.appendToTagName(char);\n        }\n      },\n      markupDeclarationOpen: function () {\n        var char = this.consume();\n        if (char === '-' && this.peek() === '-') {\n          this.consume();\n          this.transitionTo(\"commentStart\" /* commentStart */);\n          this.delegate.beginComment();\n        } else {\n          var maybeDoctype = char.toUpperCase() + this.input.substring(this.index, this.index + 6).toUpperCase();\n          if (maybeDoctype === 'DOCTYPE') {\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.transitionTo(\"doctype\" /* doctype */);\n            if (this.delegate.beginDoctype) this.delegate.beginDoctype();\n          }\n        }\n      },\n      doctype: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeDoctypeName\" /* beforeDoctypeName */);\n        }\n      },\n\n      beforeDoctypeName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          return;\n        } else {\n          this.transitionTo(\"doctypeName\" /* doctypeName */);\n          if (this.delegate.appendToDoctypeName) this.delegate.appendToDoctypeName(char.toLowerCase());\n        }\n      },\n      doctypeName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"afterDoctypeName\" /* afterDoctypeName */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypeName) this.delegate.appendToDoctypeName(char.toLowerCase());\n        }\n      },\n      afterDoctypeName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          return;\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          var nextSixChars = char.toUpperCase() + this.input.substring(this.index, this.index + 5).toUpperCase();\n          var isPublic = nextSixChars.toUpperCase() === 'PUBLIC';\n          var isSystem = nextSixChars.toUpperCase() === 'SYSTEM';\n          if (isPublic || isSystem) {\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n          }\n          if (isPublic) {\n            this.transitionTo(\"afterDoctypePublicKeyword\" /* afterDoctypePublicKeyword */);\n          } else if (isSystem) {\n            this.transitionTo(\"afterDoctypeSystemKeyword\" /* afterDoctypeSystemKeyword */);\n          }\n        }\n      },\n\n      afterDoctypePublicKeyword: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeDoctypePublicIdentifier\" /* beforeDoctypePublicIdentifier */);\n          this.consume();\n        } else if (char === '\"') {\n          this.transitionTo(\"doctypePublicIdentifierDoubleQuoted\" /* doctypePublicIdentifierDoubleQuoted */);\n          this.consume();\n        } else if (char === \"'\") {\n          this.transitionTo(\"doctypePublicIdentifierSingleQuoted\" /* doctypePublicIdentifierSingleQuoted */);\n          this.consume();\n        } else if (char === '>') {\n          this.consume();\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        }\n      },\n\n      doctypePublicIdentifierDoubleQuoted: function () {\n        var char = this.consume();\n        if (char === '\"') {\n          this.transitionTo(\"afterDoctypePublicIdentifier\" /* afterDoctypePublicIdentifier */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypePublicIdentifier) this.delegate.appendToDoctypePublicIdentifier(char);\n        }\n      },\n      doctypePublicIdentifierSingleQuoted: function () {\n        var char = this.consume();\n        if (char === \"'\") {\n          this.transitionTo(\"afterDoctypePublicIdentifier\" /* afterDoctypePublicIdentifier */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypePublicIdentifier) this.delegate.appendToDoctypePublicIdentifier(char);\n        }\n      },\n      afterDoctypePublicIdentifier: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"betweenDoctypePublicAndSystemIdentifiers\" /* betweenDoctypePublicAndSystemIdentifiers */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else if (char === '\"') {\n          this.transitionTo(\"doctypeSystemIdentifierDoubleQuoted\" /* doctypeSystemIdentifierDoubleQuoted */);\n        } else if (char === \"'\") {\n          this.transitionTo(\"doctypeSystemIdentifierSingleQuoted\" /* doctypeSystemIdentifierSingleQuoted */);\n        }\n      },\n\n      betweenDoctypePublicAndSystemIdentifiers: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          return;\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else if (char === '\"') {\n          this.transitionTo(\"doctypeSystemIdentifierDoubleQuoted\" /* doctypeSystemIdentifierDoubleQuoted */);\n        } else if (char === \"'\") {\n          this.transitionTo(\"doctypeSystemIdentifierSingleQuoted\" /* doctypeSystemIdentifierSingleQuoted */);\n        }\n      },\n\n      doctypeSystemIdentifierDoubleQuoted: function () {\n        var char = this.consume();\n        if (char === '\"') {\n          this.transitionTo(\"afterDoctypeSystemIdentifier\" /* afterDoctypeSystemIdentifier */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypeSystemIdentifier) this.delegate.appendToDoctypeSystemIdentifier(char);\n        }\n      },\n      doctypeSystemIdentifierSingleQuoted: function () {\n        var char = this.consume();\n        if (char === \"'\") {\n          this.transitionTo(\"afterDoctypeSystemIdentifier\" /* afterDoctypeSystemIdentifier */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypeSystemIdentifier) this.delegate.appendToDoctypeSystemIdentifier(char);\n        }\n      },\n      afterDoctypeSystemIdentifier: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          return;\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        }\n      },\n\n      commentStart: function () {\n        var char = this.consume();\n        if (char === '-') {\n          this.transitionTo(\"commentStartDash\" /* commentStartDash */);\n        } else if (char === '>') {\n          this.delegate.finishComment();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.delegate.appendToCommentData(char);\n          this.transitionTo(\"comment\" /* comment */);\n        }\n      },\n\n      commentStartDash: function () {\n        var char = this.consume();\n        if (char === '-') {\n          this.transitionTo(\"commentEnd\" /* commentEnd */);\n        } else if (char === '>') {\n          this.delegate.finishComment();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.delegate.appendToCommentData('-');\n          this.transitionTo(\"comment\" /* comment */);\n        }\n      },\n\n      comment: function () {\n        var char = this.consume();\n        if (char === '-') {\n          this.transitionTo(\"commentEndDash\" /* commentEndDash */);\n        } else {\n          this.delegate.appendToCommentData(char);\n        }\n      },\n      commentEndDash: function () {\n        var char = this.consume();\n        if (char === '-') {\n          this.transitionTo(\"commentEnd\" /* commentEnd */);\n        } else {\n          this.delegate.appendToCommentData('-' + char);\n          this.transitionTo(\"comment\" /* comment */);\n        }\n      },\n\n      commentEnd: function () {\n        var char = this.consume();\n        if (char === '>') {\n          this.delegate.finishComment();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.delegate.appendToCommentData('--' + char);\n          this.transitionTo(\"comment\" /* comment */);\n        }\n      },\n\n      tagName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        } else if (char === '/') {\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '>') {\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.appendToTagName(char);\n        }\n      },\n      endTagName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n          this.tagNameBuffer = '';\n        } else if (char === '/') {\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n          this.tagNameBuffer = '';\n        } else if (char === '>') {\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n          this.tagNameBuffer = '';\n        } else {\n          this.appendToTagName(char);\n        }\n      },\n      beforeAttributeName: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.consume();\n          return;\n        } else if (char === '/') {\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n          this.consume();\n        } else if (char === '>') {\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else if (char === '=') {\n          this.delegate.reportSyntaxError('attribute name cannot start with equals sign');\n          this.transitionTo(\"attributeName\" /* attributeName */);\n          this.delegate.beginAttribute();\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        } else {\n          this.transitionTo(\"attributeName\" /* attributeName */);\n          this.delegate.beginAttribute();\n        }\n      },\n      attributeName: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.transitionTo(\"afterAttributeName\" /* afterAttributeName */);\n          this.consume();\n        } else if (char === '/') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '=') {\n          this.transitionTo(\"beforeAttributeValue\" /* beforeAttributeValue */);\n          this.consume();\n        } else if (char === '>') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else if (char === '\"' || char === \"'\" || char === '<') {\n          this.delegate.reportSyntaxError(char + ' is not a valid character within attribute names');\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        } else {\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        }\n      },\n      afterAttributeName: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.consume();\n          return;\n        } else if (char === '/') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '=') {\n          this.consume();\n          this.transitionTo(\"beforeAttributeValue\" /* beforeAttributeValue */);\n        } else if (char === '>') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.transitionTo(\"attributeName\" /* attributeName */);\n          this.delegate.beginAttribute();\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        }\n      },\n      beforeAttributeValue: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.consume();\n        } else if (char === '\"') {\n          this.transitionTo(\"attributeValueDoubleQuoted\" /* attributeValueDoubleQuoted */);\n          this.delegate.beginAttributeValue(true);\n          this.consume();\n        } else if (char === \"'\") {\n          this.transitionTo(\"attributeValueSingleQuoted\" /* attributeValueSingleQuoted */);\n          this.delegate.beginAttributeValue(true);\n          this.consume();\n        } else if (char === '>') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.transitionTo(\"attributeValueUnquoted\" /* attributeValueUnquoted */);\n          this.delegate.beginAttributeValue(false);\n          this.consume();\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      attributeValueDoubleQuoted: function () {\n        var char = this.consume();\n        if (char === '\"') {\n          this.delegate.finishAttributeValue();\n          this.transitionTo(\"afterAttributeValueQuoted\" /* afterAttributeValueQuoted */);\n        } else if (char === '&') {\n          this.delegate.appendToAttributeValue(this.consumeCharRef() || '&');\n        } else {\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      attributeValueSingleQuoted: function () {\n        var char = this.consume();\n        if (char === \"'\") {\n          this.delegate.finishAttributeValue();\n          this.transitionTo(\"afterAttributeValueQuoted\" /* afterAttributeValueQuoted */);\n        } else if (char === '&') {\n          this.delegate.appendToAttributeValue(this.consumeCharRef() || '&');\n        } else {\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      attributeValueUnquoted: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        } else if (char === '/') {\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '&') {\n          this.consume();\n          this.delegate.appendToAttributeValue(this.consumeCharRef() || '&');\n        } else if (char === '>') {\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.consume();\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      afterAttributeValueQuoted: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.consume();\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        } else if (char === '/') {\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '>') {\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        }\n      },\n\n      selfClosingStartTag: function () {\n        var char = this.peek();\n        if (char === '>') {\n          this.consume();\n          this.delegate.markTagAsSelfClosing();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        }\n      },\n\n      endTagOpen: function () {\n        var char = this.consume();\n        if (char === '@' || char === ':' || isAlpha(char)) {\n          this.transitionTo(\"endTagName\" /* endTagName */);\n          this.tagNameBuffer = '';\n          this.delegate.beginEndTag();\n          this.appendToTagName(char);\n        }\n      }\n    };\n    this.reset();\n  }\n  EventedTokenizer.prototype.reset = function () {\n    this.transitionTo(\"beforeData\" /* beforeData */);\n    this.input = '';\n    this.tagNameBuffer = '';\n    this.index = 0;\n    this.line = 1;\n    this.column = 0;\n    this.delegate.reset();\n  };\n  EventedTokenizer.prototype.transitionTo = function (state) {\n    this.state = state;\n  };\n  EventedTokenizer.prototype.tokenize = function (input) {\n    this.reset();\n    this.tokenizePart(input);\n    this.tokenizeEOF();\n  };\n  EventedTokenizer.prototype.tokenizePart = function (input) {\n    this.input += preprocessInput(input);\n    while (this.index < this.input.length) {\n      var handler = this.states[this.state];\n      if (handler !== undefined) {\n        handler.call(this);\n      } else {\n        throw new Error(\"unhandled state \" + this.state);\n      }\n    }\n  };\n  EventedTokenizer.prototype.tokenizeEOF = function () {\n    this.flushData();\n  };\n  EventedTokenizer.prototype.flushData = function () {\n    if (this.state === 'data') {\n      this.delegate.finishData();\n      this.transitionTo(\"beforeData\" /* beforeData */);\n    }\n  };\n\n  EventedTokenizer.prototype.peek = function () {\n    return this.input.charAt(this.index);\n  };\n  EventedTokenizer.prototype.consume = function () {\n    var char = this.peek();\n    this.index++;\n    if (char === '\\n') {\n      this.line++;\n      this.column = 0;\n    } else {\n      this.column++;\n    }\n    return char;\n  };\n  EventedTokenizer.prototype.consumeCharRef = function () {\n    var endIndex = this.input.indexOf(';', this.index);\n    if (endIndex === -1) {\n      return;\n    }\n    var entity = this.input.slice(this.index, endIndex);\n    var chars = this.entityParser.parse(entity);\n    if (chars) {\n      var count = entity.length;\n      // consume the entity chars\n      while (count) {\n        this.consume();\n        count--;\n      }\n      // consume the `;`\n      this.consume();\n      return chars;\n    }\n  };\n  EventedTokenizer.prototype.markTagStart = function () {\n    this.delegate.tagOpen();\n  };\n  EventedTokenizer.prototype.appendToTagName = function (char) {\n    this.tagNameBuffer += char;\n    this.delegate.appendToTagName(char);\n  };\n  EventedTokenizer.prototype.isIgnoredEndTag = function () {\n    var tag = this.tagNameBuffer;\n    return tag === 'title' && this.input.substring(this.index, this.index + 8) !== '</title>' || tag === 'style' && this.input.substring(this.index, this.index + 8) !== '</style>' || tag === 'script' && this.input.substring(this.index, this.index + 9) !== '</script>';\n  };\n  return EventedTokenizer;\n}();\nvar Tokenizer = /** @class */function () {\n  function Tokenizer(entityParser, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.options = options;\n    this.token = null;\n    this.startLine = 1;\n    this.startColumn = 0;\n    this.tokens = [];\n    this.tokenizer = new EventedTokenizer(this, entityParser, options.mode);\n    this._currentAttribute = undefined;\n  }\n  Tokenizer.prototype.tokenize = function (input) {\n    this.tokens = [];\n    this.tokenizer.tokenize(input);\n    return this.tokens;\n  };\n  Tokenizer.prototype.tokenizePart = function (input) {\n    this.tokens = [];\n    this.tokenizer.tokenizePart(input);\n    return this.tokens;\n  };\n  Tokenizer.prototype.tokenizeEOF = function () {\n    this.tokens = [];\n    this.tokenizer.tokenizeEOF();\n    return this.tokens[0];\n  };\n  Tokenizer.prototype.reset = function () {\n    this.token = null;\n    this.startLine = 1;\n    this.startColumn = 0;\n  };\n  Tokenizer.prototype.current = function () {\n    var token = this.token;\n    if (token === null) {\n      throw new Error('token was unexpectedly null');\n    }\n    if (arguments.length === 0) {\n      return token;\n    }\n    for (var i = 0; i < arguments.length; i++) {\n      if (token.type === arguments[i]) {\n        return token;\n      }\n    }\n    throw new Error(\"token type was unexpectedly \" + token.type);\n  };\n  Tokenizer.prototype.push = function (token) {\n    this.token = token;\n    this.tokens.push(token);\n  };\n  Tokenizer.prototype.currentAttribute = function () {\n    return this._currentAttribute;\n  };\n  Tokenizer.prototype.addLocInfo = function () {\n    if (this.options.loc) {\n      this.current().loc = {\n        start: {\n          line: this.startLine,\n          column: this.startColumn\n        },\n        end: {\n          line: this.tokenizer.line,\n          column: this.tokenizer.column\n        }\n      };\n    }\n    this.startLine = this.tokenizer.line;\n    this.startColumn = this.tokenizer.column;\n  };\n  // Data\n  Tokenizer.prototype.beginDoctype = function () {\n    this.push({\n      type: \"Doctype\" /* Doctype */,\n      name: ''\n    });\n  };\n  Tokenizer.prototype.appendToDoctypeName = function (char) {\n    this.current(\"Doctype\" /* Doctype */).name += char;\n  };\n  Tokenizer.prototype.appendToDoctypePublicIdentifier = function (char) {\n    var doctype = this.current(\"Doctype\" /* Doctype */);\n    if (doctype.publicIdentifier === undefined) {\n      doctype.publicIdentifier = char;\n    } else {\n      doctype.publicIdentifier += char;\n    }\n  };\n  Tokenizer.prototype.appendToDoctypeSystemIdentifier = function (char) {\n    var doctype = this.current(\"Doctype\" /* Doctype */);\n    if (doctype.systemIdentifier === undefined) {\n      doctype.systemIdentifier = char;\n    } else {\n      doctype.systemIdentifier += char;\n    }\n  };\n  Tokenizer.prototype.endDoctype = function () {\n    this.addLocInfo();\n  };\n  Tokenizer.prototype.beginData = function () {\n    this.push({\n      type: \"Chars\" /* Chars */,\n      chars: ''\n    });\n  };\n  Tokenizer.prototype.appendToData = function (char) {\n    this.current(\"Chars\" /* Chars */).chars += char;\n  };\n  Tokenizer.prototype.finishData = function () {\n    this.addLocInfo();\n  };\n  // Comment\n  Tokenizer.prototype.beginComment = function () {\n    this.push({\n      type: \"Comment\" /* Comment */,\n      chars: ''\n    });\n  };\n  Tokenizer.prototype.appendToCommentData = function (char) {\n    this.current(\"Comment\" /* Comment */).chars += char;\n  };\n  Tokenizer.prototype.finishComment = function () {\n    this.addLocInfo();\n  };\n  // Tags - basic\n  Tokenizer.prototype.tagOpen = function () {};\n  Tokenizer.prototype.beginStartTag = function () {\n    this.push({\n      type: \"StartTag\" /* StartTag */,\n      tagName: '',\n      attributes: [],\n      selfClosing: false\n    });\n  };\n  Tokenizer.prototype.beginEndTag = function () {\n    this.push({\n      type: \"EndTag\" /* EndTag */,\n      tagName: ''\n    });\n  };\n  Tokenizer.prototype.finishTag = function () {\n    this.addLocInfo();\n  };\n  Tokenizer.prototype.markTagAsSelfClosing = function () {\n    this.current(\"StartTag\" /* StartTag */).selfClosing = true;\n  };\n  // Tags - name\n  Tokenizer.prototype.appendToTagName = function (char) {\n    this.current(\"StartTag\" /* StartTag */, \"EndTag\" /* EndTag */).tagName += char;\n  };\n  // Tags - attributes\n  Tokenizer.prototype.beginAttribute = function () {\n    this._currentAttribute = ['', '', false];\n  };\n  Tokenizer.prototype.appendToAttributeName = function (char) {\n    this.currentAttribute()[0] += char;\n  };\n  Tokenizer.prototype.beginAttributeValue = function (isQuoted) {\n    this.currentAttribute()[2] = isQuoted;\n  };\n  Tokenizer.prototype.appendToAttributeValue = function (char) {\n    this.currentAttribute()[1] += char;\n  };\n  Tokenizer.prototype.finishAttributeValue = function () {\n    this.current(\"StartTag\" /* StartTag */).attributes.push(this._currentAttribute);\n  };\n  Tokenizer.prototype.reportSyntaxError = function (message) {\n    this.current().syntaxError = message;\n  };\n  return Tokenizer;\n}();\nfunction tokenize(input, options) {\n  var tokenizer = new Tokenizer(new EntityParser(HTML5NamedCharRefs), options);\n  return tokenizer.tokenize(input);\n}\n\nconst LinkifyResult = 'LinkifyResult';\nconst StartTag = 'StartTag';\nconst EndTag = 'EndTag';\nconst Chars = 'Chars';\nconst Comment = 'Comment';\nconst Doctype = 'Doctype';\n\n/**\n * @param {string} str html string to link\n * @param {import('linkifyjs').Opts} [opts] linkify options\n * @returns {string} resulting string\n */\nfunction linkifyHtml(str, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  // `tokens` and `token` in this section refer to tokens generated by the\n  // HTML parser, not linkify's parser\n  const tokens = tokenize(str);\n  const linkifiedTokens = [];\n  const linkified = [];\n  const options = new Options(opts, defaultRender);\n\n  // Linkify the tokens given by the parser\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.type === StartTag) {\n      linkifiedTokens.push(token);\n\n      // Ignore all the contents of ignored tags\n      const tagName = token.tagName.toUpperCase();\n      const isIgnored = tagName === 'A' || options.ignoreTags.indexOf(tagName) >= 0;\n      if (!isIgnored) {\n        continue;\n      }\n      let preskipLen = linkifiedTokens.length;\n      skipTagTokens(tagName, tokens, ++i, linkifiedTokens);\n      i += linkifiedTokens.length - preskipLen - 1;\n    } else if (token.type !== Chars) {\n      // Skip this token, it's not important\n      linkifiedTokens.push(token);\n    } else {\n      // Valid text token, linkify it!\n      const linkifedChars = linkifyChars(token.chars, options);\n      linkifiedTokens.push.apply(linkifiedTokens, linkifedChars);\n    }\n  }\n\n  // Convert the tokens back into a string\n  for (let i = 0; i < linkifiedTokens.length; i++) {\n    const token = linkifiedTokens[i];\n    switch (token.type) {\n      case LinkifyResult:\n        linkified.push(token.rendered);\n        break;\n      case StartTag:\n        {\n          let link = '<' + token.tagName;\n          if (token.attributes.length > 0) {\n            link += ' ' + attributeArrayToStrings(token.attributes).join(' ');\n          }\n          if (token.selfClosing) {\n            link += ' /';\n          }\n          link += '>';\n          linkified.push(link);\n          break;\n        }\n      case EndTag:\n        linkified.push(`</${token.tagName}>`);\n        break;\n      case Chars:\n        linkified.push(escapeText(token.chars));\n        break;\n      case Comment:\n        linkified.push(`<!--${escapeText(token.chars)}-->`);\n        break;\n      case Doctype:\n        {\n          let doctype = `<!DOCTYPE ${token.name}`;\n          if (token.publicIdentifier) {\n            doctype += ` PUBLIC \"${token.publicIdentifier}\"`;\n          }\n          if (token.systemIdentifier) {\n            doctype += ` \"${token.systemIdentifier}\"`;\n          }\n          doctype += '>';\n          linkified.push(doctype);\n          break;\n        }\n    }\n  }\n  return linkified.join('');\n}\n\n/**\n\t`tokens` and `token` in this section referes to tokens returned by\n\t`linkify.tokenize`. `linkified` will contain HTML Parser-style tokens\n\t@param {string}\n\t@param {import('linkifyjs').Options}\n*/\nfunction linkifyChars(str, options) {\n  const tokens = tokenize$1(str);\n  const result = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.t === 'nl' && options.get('nl2br')) {\n      result.push({\n        type: StartTag,\n        tagName: 'br',\n        attributes: [],\n        selfClosing: true\n      });\n    } else if (!token.isLink || !options.check(token)) {\n      result.push({\n        type: Chars,\n        chars: token.toString()\n      });\n    } else {\n      result.push({\n        type: LinkifyResult,\n        rendered: options.render(token)\n      });\n    }\n  }\n  return result;\n}\n\n/**\n\tReturns a list of tokens skipped until the closing tag of tagName.\n\n\t* `tagName` is the closing tag which will prompt us to stop skipping\n\t* `tokens` is the array of tokens generated by HTML5Tokenizer which\n\t* `i` is the index immediately after the opening tag to skip\n\t* `skippedTokens` is an array which skipped tokens are being pushed into\n\n\tCaveats\n\n\t* Assumes that i is the first token after the given opening tagName\n\t* The closing tag will be skipped, but nothing after it\n\t* Will track whether there is a nested tag of the same type\n*/\nfunction skipTagTokens(tagName, tokens, i, skippedTokens) {\n  // number of tokens of this type on the [fictional] stack\n  let stackCount = 1;\n  while (i < tokens.length && stackCount > 0) {\n    let token = tokens[i];\n    if (token.type === StartTag && token.tagName.toUpperCase() === tagName) {\n      // Nested tag of the same type, \"add to stack\"\n      stackCount++;\n    } else if (token.type === EndTag && token.tagName.toUpperCase() === tagName) {\n      // Closing tag\n      stackCount--;\n    }\n    skippedTokens.push(token);\n    i++;\n  }\n\n  // Note that if stackCount > 0 here, the HTML is probably invalid\n  return skippedTokens;\n}\nfunction defaultRender(_ref) {\n  let {\n    tagName,\n    attributes,\n    content\n  } = _ref;\n  return `<${tagName} ${attributesToString(attributes)}>${escapeText(content)}</${tagName}>`;\n}\nfunction escapeText(text) {\n  return text.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\nfunction escapeAttr(attr) {\n  return attr.replace(/\"/g, '&quot;');\n}\nfunction attributesToString(attributes) {\n  const result = [];\n  for (const attr in attributes) {\n    const val = attributes[attr] + '';\n    result.push(`${attr}=\"${escapeAttr(val)}\"`);\n  }\n  return result.join(' ');\n}\nfunction attributeArrayToStrings(attrs) {\n  const attrStrs = [];\n  for (let i = 0; i < attrs.length; i++) {\n    const name = attrs[i][0];\n    const value = attrs[i][1] + '';\n    attrStrs.push(`${name}=\"${escapeAttr(value)}\"`);\n  }\n  return attrStrs;\n}\n\nexport { linkifyHtml as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}